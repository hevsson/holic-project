{"version":3,"sources":["./src/app/pages/register/register.component.html","./src/app/model/principal.ts","./src/app/pages/register/register.component.scss","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.module.ts"],"names":[],"mappings":"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","file":"pages-register-register-module-es2015.js","sourcesContent":["export default \"<div class=\\\"d-flex justify-content-center align-items-center w-100 h-100 register-container register\\\">\\r\\n    <div class=\\\"col-xl-4 col-md-6 col-10\\\">\\r\\n        <div class=\\\"card border-0 box-shadow rounded-0 register\\\">\\r\\n            <div class=\\\"card-body text-center pb-1\\\">\\r\\n                <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"text-left mt-4\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input [formControl]=\\\"name\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Login\\\" type=\\\"text\\\"> \\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('name').touched\\\">\\r\\n                            <span *ngIf=\\\"form.get('name').hasError('required')\\\">Login is required</span>\\r\\n                            <span *ngIf=\\\"form.get('name').hasError('minlength')\\\">Minimum of 3 characters</span>\\r\\n                        </small>       \\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input [formControl]=\\\"email\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Email\\\" type=\\\"text\\\"> \\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('email').touched\\\">\\r\\n                            <span *ngIf=\\\"form.get('email').hasError('required')\\\">Email is required</span>\\r\\n                            <span *ngIf=\\\"form.get('email').hasError('invalidEmail')\\\">Invalid email address</span>\\r\\n                        </small> \\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input [formControl]=\\\"password\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" minlength=\\\"6\\\">\\r\\n                         <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('password').touched\\\">\\r\\n                            <span *ngIf=\\\"form.get('password').hasError('required')\\\">Password is required</span>\\r\\n                            <span *ngIf=\\\"form.get('password').hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</span>\\r\\n                        </small>                     \\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input [formControl]=\\\"confirmPassword\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Confirm Password\\\" type=\\\"password\\\">\\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('confirmPassword').touched\\\">\\r\\n                            <span *ngIf=\\\"form.get('confirmPassword').hasError('required')\\\">Confirm Password is required</span>\\r\\n                            <span *ngIf=\\\"form.get('confirmPassword').hasError('mismatchedPasswords')\\\">Passwords do not match</span>\\r\\n                        </small> \\r\\n                    </div>             \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-block submit\\\" type=\\\"submit\\\">Sign up</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <a routerLink=\\\"/login\\\" class=\\\"transition\\\">Already have an account? Sign in!</a> \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export class Principal {\r\n  id: number;\r\n  name: string;\r\n  firstName: string;\r\n  email: string;\r\n  login: string;\r\n  password: string;\r\n  country: string;\r\n  age: number;\r\n  admin: boolean;\r\n\r\n  static initPrincipal(principal: Principal): Principal {\r\n    const p = new Principal();\r\n    p.id = principal.id;\r\n    p.name = principal.name;\r\n    p.firstName = principal.firstName;\r\n    p.email = principal.email;\r\n    p.login = principal.login;\r\n    p.password = principal.password;\r\n    p.country = principal.country;\r\n    p.age = principal.age;\r\n    p.admin = principal.admin;\r\n\r\n    return p;\r\n  }\r\n}\r\n\r\nexport class RegisterView {\r\n  name: string;\r\n  //firstName: string;\r\n  email: string;\r\n  login: string;\r\n  password: string;\r\n  //country: string;\r\n  //age: number;\r\n  //admin: boolean;\r\n}\r\n","export default \".register-container {\\n  position: absolute; }\\n  .register-container .card .card-header {\\n    width: 80px;\\n    height: 80px;\\n    margin: 0 auto;\\n    margin-top: -40px;\\n    border-radius: 50%;\\n    font-size: 36px; }\\n  .register {\\n  background-color: white !important; }\\n  .submit {\\n  color: white !important;\\n  background-color: black !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvQzpcXFVzZXJzXFxoZXJ2ZVxcaG9saWNcXHN0YXJ0bmcvc3JjXFxhcHBcXHBhZ2VzXFxyZWdpc3RlclxccmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBa0IsRUFBQTtFQUR0QjtJQUlZLFdBQVc7SUFDWCxZQUFZO0lBQ1osY0FBYztJQUNkLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZUFBZSxFQUFBO0VBSzNCO0VBQ0ksa0NBQWtDLEVBQUE7RUFHdEM7RUFDSSx1QkFBdUI7RUFDdkIsa0NBQWtDLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZWdpc3Rlci1jb250YWluZXJ7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAuY2FyZHtcclxuICAgICAgICAuY2FyZC1oZWFkZXJ7XHJcbiAgICAgICAgICAgIHdpZHRoOiA4MHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDgwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAtNDBweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDM2cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4ucmVnaXN0ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcclxufVxyXG5cclxuLnN1Ym1pdCB7XHJcbiAgICBjb2xvcjogd2hpdGUgIWltcG9ydGFudDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators} from '@angular/forms';\r\nimport { RegisterView } from 'src/app/model/principal';\r\nimport { UserProfileService } from '../login/service/userprofile.service';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class RegisterComponent {\r\n    public router: Router;\r\n    public form:FormGroup;\r\n    public name:AbstractControl;\r\n    public email:AbstractControl;\r\n    public password:AbstractControl;\r\n    public confirmPassword:AbstractControl;\r\n    \r\n    constructor(router:Router, fb:FormBuilder, private userProfileService: UserProfileService, public snackBar: MatSnackBar,) {\r\n        this.router = router;\r\n        this.form = fb.group({\r\n            name: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n            email: ['', Validators.compose([Validators.required, emailValidator])],\r\n            password: ['', Validators.required],\r\n            confirmPassword: ['', Validators.required]\r\n        },{validator: matchingPasswords('password', 'confirmPassword')});\r\n\r\n        this.name = this.form.controls['name'];\r\n        this.email = this.form.controls['email'];\r\n        this.password = this.form.controls['password'];\r\n        this.confirmPassword = this.form.controls['confirmPassword'];\r\n    }\r\n\r\n     public onSubmit(values:Object):void {\r\n        if (this.form.valid) {\r\n            let register: RegisterView = new RegisterView();\r\n            register.login = this.form.value.name;\r\n            register.password = this.form.value.password;\r\n            register.email = this.form.value.email;\r\n            this.userProfileService.register(register).subscribe(p => {\r\n                this.snackBar.open('Account created successfully', 'close', {\r\n                    verticalPosition: 'top',\r\n                    duration: 2000\r\n                  });\r\n                this.router.navigate(['/login']);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(){\r\n        document.getElementById('preloader').classList.add('hide');\r\n    }\r\n}\r\n\r\nexport function emailValidator(control: FormControl): {[key: string]: any} {\r\n    var emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;    \r\n    if (control.value && !emailRegexp.test(control.value)) {\r\n        return {invalidEmail: true};\r\n    }\r\n}\r\n\r\nexport function matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\r\n    return (group: FormGroup) => {\r\n        let password= group.controls[passwordKey];\r\n        let passwordConfirmation= group.controls[passwordConfirmationKey];\r\n        if (password.value !== passwordConfirmation.value) {\r\n            return passwordConfirmation.setErrors({mismatchedPasswords: true})\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RegisterComponent } from './register.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: RegisterComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    RegisterComponent\r\n  ]\r\n})\r\nexport class RegisterModule { }\r\n"],"sourceRoot":"webpack:///"}