{"version":3,"sources":["src/app/pages/register/register.component.html","src/app/model/principal.ts","src/app/pages/register/register.component.scss","src/app/pages/register/register.component.ts","src/app/pages/register/register.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"d-flex justify-content-center align-items-center w-100 h-100 register-container register\\\">\\n    <div class=\\\"col-xl-4 col-md-6 col-10\\\">\\n        <div class=\\\"card border-0 box-shadow rounded-0 register\\\">\\n            <div class=\\\"card-body text-center pb-1\\\">\\n                <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"text-left mt-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"name\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Login\\\" type=\\\"text\\\"> \\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('name').touched\\\">\\n                            <span *ngIf=\\\"form.get('name').hasError('required')\\\">Login is required</span>\\n                            <span *ngIf=\\\"form.get('name').hasError('minlength')\\\">Minimum of 3 characters</span>\\n                        </small>       \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"email\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Email\\\" type=\\\"text\\\"> \\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('email').touched\\\">\\n                            <span *ngIf=\\\"form.get('email').hasError('required')\\\">Email is required</span>\\n                            <span *ngIf=\\\"form.get('email').hasError('invalidEmail')\\\">Invalid email address</span>\\n                        </small> \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"password\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" minlength=\\\"6\\\">\\n                         <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('password').touched\\\">\\n                            <span *ngIf=\\\"form.get('password').hasError('required')\\\">Password is required</span>\\n                            <span *ngIf=\\\"form.get('password').hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</span>\\n                        </small>                     \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"confirmPassword\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Confirm Password\\\" type=\\\"password\\\">\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('confirmPassword').touched\\\">\\n                            <span *ngIf=\\\"form.get('confirmPassword').hasError('required')\\\">Confirm Password is required</span>\\n                            <span *ngIf=\\\"form.get('confirmPassword').hasError('mismatchedPasswords')\\\">Passwords do not match</span>\\n                        </small> \\n                    </div>             \\n                    <div class=\\\"form-group\\\">\\n                        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-block submit\\\" type=\\\"submit\\\">Sign up</button>\\n                    </div>\\n                </form>\\n                <a routerLink=\\\"/login\\\" class=\\\"transition\\\">Already have an account? Sign in!</a> \\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export class Principal {\n  id: number;\n  name: string;\n  firstName: string;\n  email: string;\n  login: string;\n  password: string;\n  country: string;\n  age: number;\n  admin: boolean;\n\n  static initPrincipal(principal: Principal): Principal {\n    const p = new Principal();\n    p.id = principal.id;\n    p.name = principal.name;\n    p.firstName = principal.firstName;\n    p.email = principal.email;\n    p.login = principal.login;\n    p.password = principal.password;\n    p.country = principal.country;\n    p.age = principal.age;\n    p.admin = principal.admin;\n\n    return p;\n  }\n}\n\nexport class RegisterView {\n  name: string;\n  //firstName: string;\n  email: string;\n  login: string;\n  password: string;\n  //country: string;\n  //age: number;\n  //admin: boolean;\n}\n","export default \".register-container {\\n  position: absolute; }\\n  .register-container .card .card-header {\\n    width: 80px;\\n    height: 80px;\\n    margin: 0 auto;\\n    margin-top: -40px;\\n    border-radius: 50%;\\n    font-size: 36px; }\\n  .register {\\n  background-color: white !important; }\\n  .submit {\\n  color: white !important;\\n  background-color: black !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvQzpcXFVzZXJzXFxoZXJ2ZVxcaG9saWNcXHN0YXJ0bmcvc3JjXFxhcHBcXHBhZ2VzXFxyZWdpc3RlclxccmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBa0IsRUFBQTtFQUR0QjtJQUlZLFdBQVc7SUFDWCxZQUFZO0lBQ1osY0FBYztJQUNkLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZUFBZSxFQUFBO0VBSzNCO0VBQ0ksa0NBQWtDLEVBQUE7RUFHdEM7RUFDSSx1QkFBdUI7RUFDdkIsa0NBQWtDLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZWdpc3Rlci1jb250YWluZXJ7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIC5jYXJke1xuICAgICAgICAuY2FyZC1oZWFkZXJ7XG4gICAgICAgICAgICB3aWR0aDogODBweDtcbiAgICAgICAgICAgIGhlaWdodDogODBweDtcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogLTQwcHg7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgICAgICBmb250LXNpemU6IDM2cHg7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5yZWdpc3RlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbn1cblxuLnN1Ym1pdCB7XG4gICAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2sgIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators} from '@angular/forms';\nimport { RegisterView } from 'src/app/model/principal';\nimport { UserProfileService } from '../login/service/userprofile.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class RegisterComponent {\n    public router: Router;\n    public form:FormGroup;\n    public name:AbstractControl;\n    public email:AbstractControl;\n    public password:AbstractControl;\n    public confirmPassword:AbstractControl;\n    \n    constructor(router:Router, fb:FormBuilder, private userProfileService: UserProfileService, public snackBar: MatSnackBar,) {\n        this.router = router;\n        this.form = fb.group({\n            name: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\n            email: ['', Validators.compose([Validators.required, emailValidator])],\n            password: ['', Validators.required],\n            confirmPassword: ['', Validators.required]\n        },{validator: matchingPasswords('password', 'confirmPassword')});\n\n        this.name = this.form.controls['name'];\n        this.email = this.form.controls['email'];\n        this.password = this.form.controls['password'];\n        this.confirmPassword = this.form.controls['confirmPassword'];\n    }\n\n     public onSubmit(values:Object):void {\n        if (this.form.valid) {\n            let register: RegisterView = new RegisterView();\n            register.login = this.form.value.name;\n            register.password = this.form.value.password;\n            register.email = this.form.value.email;\n            this.userProfileService.register(register).subscribe(p => {\n                this.snackBar.open('Account created successfully', 'close', {\n                    verticalPosition: 'top',\n                    duration: 2000\n                  });\n                this.router.navigate(['/login']);\n            });\n\n        }\n    }\n\n    ngAfterViewInit(){\n        document.getElementById('preloader').classList.add('hide');\n    }\n}\n\nexport function emailValidator(control: FormControl): {[key: string]: any} {\n    var emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;    \n    if (control.value && !emailRegexp.test(control.value)) {\n        return {invalidEmail: true};\n    }\n}\n\nexport function matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\n    return (group: FormGroup) => {\n        let password= group.controls[passwordKey];\n        let passwordConfirmation= group.controls[passwordConfirmationKey];\n        if (password.value !== passwordConfirmation.value) {\n            return passwordConfirmation.setErrors({mismatchedPasswords: true})\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register.component';\n\nexport const routes = [\n  { path: '', component: RegisterComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    RegisterComponent\n  ]\n})\nexport class RegisterModule { }\n"],"sourceRoot":"webpack:///","file":"pages-register-register-module-es5.js"}