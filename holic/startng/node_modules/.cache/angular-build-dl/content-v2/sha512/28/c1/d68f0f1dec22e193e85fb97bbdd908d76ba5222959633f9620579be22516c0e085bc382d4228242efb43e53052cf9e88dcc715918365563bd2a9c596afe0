{"version":3,"sources":["./src/app/pages/register/register.component.html","./src/app/model/principal.ts","./src/app/pages/register/register.component.scss","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.module.ts"],"names":[],"mappings":"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","file":"pages-register-register-module-es2015.js","sourcesContent":["export default \"<div class=\\\"d-flex justify-content-center align-items-center w-100 h-100 register-container register\\\">\\n    <div class=\\\"col-xl-4 col-md-6 col-10\\\">\\n        <div class=\\\"card border-0 box-shadow rounded-0 register\\\">\\n            <div class=\\\"card-body text-center pb-1\\\">\\n                <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"text-left mt-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"name\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Login\\\" type=\\\"text\\\"> \\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('name').touched\\\">\\n                            <span *ngIf=\\\"form.get('name').hasError('required')\\\">Login is required</span>\\n                            <span *ngIf=\\\"form.get('name').hasError('minlength')\\\">Minimum of 3 characters</span>\\n                        </small>       \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"email\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Email\\\" type=\\\"text\\\"> \\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('email').touched\\\">\\n                            <span *ngIf=\\\"form.get('email').hasError('required')\\\">Email is required</span>\\n                            <span *ngIf=\\\"form.get('email').hasError('invalidEmail')\\\">Invalid email address</span>\\n                        </small> \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"password\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" minlength=\\\"6\\\">\\n                         <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('password').touched\\\">\\n                            <span *ngIf=\\\"form.get('password').hasError('required')\\\">Password is required</span>\\n                            <span *ngIf=\\\"form.get('password').hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</span>\\n                        </small>                     \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <input [formControl]=\\\"confirmPassword\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Confirm Password\\\" type=\\\"password\\\">\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('confirmPassword').touched\\\">\\n                            <span *ngIf=\\\"form.get('confirmPassword').hasError('required')\\\">Confirm Password is required</span>\\n                            <span *ngIf=\\\"form.get('confirmPassword').hasError('mismatchedPasswords')\\\">Passwords do not match</span>\\n                        </small> \\n                    </div>             \\n                    <div class=\\\"form-group\\\">\\n                        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-block submit\\\" type=\\\"submit\\\">Sign up</button>\\n                    </div>\\n                </form>\\n                <a routerLink=\\\"/login\\\" class=\\\"transition\\\">Already have an account? Sign in!</a> \\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export class Principal {\n  id: number;\n  name: string;\n  firstName: string;\n  email: string;\n  login: string;\n  password: string;\n  country: string;\n  age: number;\n  admin: boolean;\n\n  static initPrincipal(principal: Principal): Principal {\n    const p = new Principal();\n    p.id = principal.id;\n    p.name = principal.name;\n    p.firstName = principal.firstName;\n    p.email = principal.email;\n    p.login = principal.login;\n    p.password = principal.password;\n    p.country = principal.country;\n    p.age = principal.age;\n    p.admin = principal.admin;\n\n    return p;\n  }\n}\n\nexport class RegisterView {\n  name: string;\n  //firstName: string;\n  email: string;\n  login: string;\n  password: string;\n  //country: string;\n  //age: number;\n  //admin: boolean;\n}\n","export default \".register-container {\\n  position: absolute; }\\n  .register-container .card .card-header {\\n    width: 80px;\\n    height: 80px;\\n    margin: 0 auto;\\n    margin-top: -40px;\\n    border-radius: 50%;\\n    font-size: 36px; }\\n  .register {\\n  background-color: white !important; }\\n  .submit {\\n  color: white !important;\\n  background-color: black !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvQzpcXFVzZXJzXFxoZXJ2ZVxcaG9saWNcXHN0YXJ0bmcvc3JjXFxhcHBcXHBhZ2VzXFxyZWdpc3RlclxccmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBa0IsRUFBQTtFQUR0QjtJQUlZLFdBQVc7SUFDWCxZQUFZO0lBQ1osY0FBYztJQUNkLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZUFBZSxFQUFBO0VBSzNCO0VBQ0ksa0NBQWtDLEVBQUE7RUFHdEM7RUFDSSx1QkFBdUI7RUFDdkIsa0NBQWtDLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZWdpc3Rlci1jb250YWluZXJ7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIC5jYXJke1xuICAgICAgICAuY2FyZC1oZWFkZXJ7XG4gICAgICAgICAgICB3aWR0aDogODBweDtcbiAgICAgICAgICAgIGhlaWdodDogODBweDtcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogLTQwcHg7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgICAgICBmb250LXNpemU6IDM2cHg7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5yZWdpc3RlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbn1cblxuLnN1Ym1pdCB7XG4gICAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2sgIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators} from '@angular/forms';\nimport { RegisterView } from 'src/app/model/principal';\nimport { UserProfileService } from '../login/service/userprofile.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class RegisterComponent {\n    public router: Router;\n    public form:FormGroup;\n    public name:AbstractControl;\n    public email:AbstractControl;\n    public password:AbstractControl;\n    public confirmPassword:AbstractControl;\n    \n    constructor(router:Router, fb:FormBuilder, private userProfileService: UserProfileService, public snackBar: MatSnackBar,) {\n        this.router = router;\n        this.form = fb.group({\n            name: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\n            email: ['', Validators.compose([Validators.required, emailValidator])],\n            password: ['', Validators.required],\n            confirmPassword: ['', Validators.required]\n        },{validator: matchingPasswords('password', 'confirmPassword')});\n\n        this.name = this.form.controls['name'];\n        this.email = this.form.controls['email'];\n        this.password = this.form.controls['password'];\n        this.confirmPassword = this.form.controls['confirmPassword'];\n    }\n\n     public onSubmit(values:Object):void {\n        if (this.form.valid) {\n            let register: RegisterView = new RegisterView();\n            register.login = this.form.value.name;\n            register.password = this.form.value.password;\n            register.email = this.form.value.email;\n            this.userProfileService.register(register).subscribe(p => {\n                this.snackBar.open('Account created successfully', 'close', {\n                    verticalPosition: 'top',\n                    duration: 2000\n                  });\n                this.router.navigate(['/login']);\n            });\n\n        }\n    }\n\n    ngAfterViewInit(){\n        document.getElementById('preloader').classList.add('hide');\n    }\n}\n\nexport function emailValidator(control: FormControl): {[key: string]: any} {\n    var emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;    \n    if (control.value && !emailRegexp.test(control.value)) {\n        return {invalidEmail: true};\n    }\n}\n\nexport function matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\n    return (group: FormGroup) => {\n        let password= group.controls[passwordKey];\n        let passwordConfirmation= group.controls[passwordConfirmationKey];\n        if (password.value !== passwordConfirmation.value) {\n            return passwordConfirmation.setErrors({mismatchedPasswords: true})\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register.component';\n\nexport const routes = [\n  { path: '', component: RegisterComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    RegisterComponent\n  ]\n})\nexport class RegisterModule { }\n"],"sourceRoot":"webpack:///"}