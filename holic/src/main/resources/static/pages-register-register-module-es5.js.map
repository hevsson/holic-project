{"version":3,"sources":["src/app/pages/register/register.component.html","src/app/model/principal.ts","src/app/pages/register/register.component.scss","src/app/pages/register/register.component.ts","src/app/pages/register/register.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"d-flex justify-content-center align-items-center w-100 h-100 register-container register\\\">\\r\\n    <div class=\\\"col-xl-4 col-md-6 col-10\\\">\\r\\n        <div class=\\\"card border-0 box-shadow rounded-0 register\\\">\\r\\n            <div class=\\\"card-body text-center pb-1\\\">\\r\\n                <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"text-left mt-4\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input [formControl]=\\\"name\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Login\\\" type=\\\"text\\\"> \\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('name').touched\\\">\\r\\n                            <span *ngIf=\\\"form.get('name').hasError('required')\\\">Login is required</span>\\r\\n                            <span *ngIf=\\\"form.get('name').hasError('minlength')\\\">Minimum of 3 characters</span>\\r\\n                        </small>       \\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input [formControl]=\\\"email\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Email\\\" type=\\\"text\\\"> \\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('email').touched\\\">\\r\\n                            <span *ngIf=\\\"form.get('email').hasError('required')\\\">Email is required</span>\\r\\n                            <span *ngIf=\\\"form.get('email').hasError('invalidEmail')\\\">Invalid email address</span>\\r\\n                        </small> \\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input [formControl]=\\\"password\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" minlength=\\\"6\\\">\\r\\n                         <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('password').touched\\\">\\r\\n                            <span *ngIf=\\\"form.get('password').hasError('required')\\\">Password is required</span>\\r\\n                            <span *ngIf=\\\"form.get('password').hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</span>\\r\\n                        </small>                     \\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input [formControl]=\\\"confirmPassword\\\" class=\\\"form-control validation-field\\\" placeholder=\\\"Confirm Password\\\" type=\\\"password\\\">\\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('confirmPassword').touched\\\">\\r\\n                            <span *ngIf=\\\"form.get('confirmPassword').hasError('required')\\\">Confirm Password is required</span>\\r\\n                            <span *ngIf=\\\"form.get('confirmPassword').hasError('mismatchedPasswords')\\\">Passwords do not match</span>\\r\\n                        </small> \\r\\n                    </div>             \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-block submit\\\" type=\\\"submit\\\">Sign up</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <a routerLink=\\\"/login\\\" class=\\\"transition\\\">Already have an account? Sign in!</a> \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export class Principal {\r\n  id: number;\r\n  name: string;\r\n  firstName: string;\r\n  email: string;\r\n  login: string;\r\n  password: string;\r\n  country: string;\r\n  age: number;\r\n  admin: boolean;\r\n\r\n  static initPrincipal(principal: Principal): Principal {\r\n    const p = new Principal();\r\n    p.id = principal.id;\r\n    p.name = principal.name;\r\n    p.firstName = principal.firstName;\r\n    p.email = principal.email;\r\n    p.login = principal.login;\r\n    p.password = principal.password;\r\n    p.country = principal.country;\r\n    p.age = principal.age;\r\n    p.admin = principal.admin;\r\n\r\n    return p;\r\n  }\r\n}\r\n\r\nexport class RegisterView {\r\n  name: string;\r\n  //firstName: string;\r\n  email: string;\r\n  login: string;\r\n  password: string;\r\n  //country: string;\r\n  //age: number;\r\n  //admin: boolean;\r\n}\r\n","export default \".register-container {\\n  position: absolute; }\\n  .register-container .card .card-header {\\n    width: 80px;\\n    height: 80px;\\n    margin: 0 auto;\\n    margin-top: -40px;\\n    border-radius: 50%;\\n    font-size: 36px; }\\n  .register {\\n  background-color: white !important; }\\n  .submit {\\n  color: white !important;\\n  background-color: black !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvQzpcXFVzZXJzXFxoZXJ2ZVxcaG9saWNcXHN0YXJ0bmcvc3JjXFxhcHBcXHBhZ2VzXFxyZWdpc3RlclxccmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBa0IsRUFBQTtFQUR0QjtJQUlZLFdBQVc7SUFDWCxZQUFZO0lBQ1osY0FBYztJQUNkLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZUFBZSxFQUFBO0VBSzNCO0VBQ0ksa0NBQWtDLEVBQUE7RUFHdEM7RUFDSSx1QkFBdUI7RUFDdkIsa0NBQWtDLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZWdpc3Rlci1jb250YWluZXJ7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAuY2FyZHtcclxuICAgICAgICAuY2FyZC1oZWFkZXJ7XHJcbiAgICAgICAgICAgIHdpZHRoOiA4MHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDgwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAtNDBweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDM2cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4ucmVnaXN0ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcclxufVxyXG5cclxuLnN1Ym1pdCB7XHJcbiAgICBjb2xvcjogd2hpdGUgIWltcG9ydGFudDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators} from '@angular/forms';\r\nimport { RegisterView } from 'src/app/model/principal';\r\nimport { UserProfileService } from '../login/service/userprofile.service';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class RegisterComponent {\r\n    public router: Router;\r\n    public form:FormGroup;\r\n    public name:AbstractControl;\r\n    public email:AbstractControl;\r\n    public password:AbstractControl;\r\n    public confirmPassword:AbstractControl;\r\n    \r\n    constructor(router:Router, fb:FormBuilder, private userProfileService: UserProfileService, public snackBar: MatSnackBar,) {\r\n        this.router = router;\r\n        this.form = fb.group({\r\n            name: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n            email: ['', Validators.compose([Validators.required, emailValidator])],\r\n            password: ['', Validators.required],\r\n            confirmPassword: ['', Validators.required]\r\n        },{validator: matchingPasswords('password', 'confirmPassword')});\r\n\r\n        this.name = this.form.controls['name'];\r\n        this.email = this.form.controls['email'];\r\n        this.password = this.form.controls['password'];\r\n        this.confirmPassword = this.form.controls['confirmPassword'];\r\n    }\r\n\r\n     public onSubmit(values:Object):void {\r\n        if (this.form.valid) {\r\n            let register: RegisterView = new RegisterView();\r\n            register.login = this.form.value.name;\r\n            register.password = this.form.value.password;\r\n            register.email = this.form.value.email;\r\n            this.userProfileService.register(register).subscribe(p => {\r\n                this.snackBar.open('Account created successfully', 'close', {\r\n                    verticalPosition: 'top',\r\n                    duration: 2000\r\n                  });\r\n                this.router.navigate(['/login']);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(){\r\n        document.getElementById('preloader').classList.add('hide');\r\n    }\r\n}\r\n\r\nexport function emailValidator(control: FormControl): {[key: string]: any} {\r\n    var emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;    \r\n    if (control.value && !emailRegexp.test(control.value)) {\r\n        return {invalidEmail: true};\r\n    }\r\n}\r\n\r\nexport function matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\r\n    return (group: FormGroup) => {\r\n        let password= group.controls[passwordKey];\r\n        let passwordConfirmation= group.controls[passwordConfirmationKey];\r\n        if (password.value !== passwordConfirmation.value) {\r\n            return passwordConfirmation.setErrors({mismatchedPasswords: true})\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RegisterComponent } from './register.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: RegisterComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    RegisterComponent\r\n  ]\r\n})\r\nexport class RegisterModule { }\r\n"],"sourceRoot":"webpack:///","file":"pages-register-register-module-es5.js"}